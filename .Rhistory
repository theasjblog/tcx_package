data$GAP <- data$Pace - data$Pace*(perc*grade)
View(data)
plot(data$Pace)
plot(data$GAP)
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
remove(data)
remove(grade)
remove(perc)
doPlots(gpx)
compareSplits(gpx)
library(tcxAnalyser)
compareSplits(gpx)
sp <- autoSplits(gpx)
doPlots(gpx, sp = sp)
compareSplits(sp)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
View(gpx)
sp <- createSplits(gpx, c(10, 20, 35), "thimMin")
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
library(tcxAnalyser)
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
View(res)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
View(res)
p <- doPlots(gpx)
print(p)
source('~/.active-rstudio-document')
library(ggplot2)
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
d <- gpx[, c("Time", "Pace")]
View(d)
tcxAnalyser:::melting(d)
tcxAnalyser:::melting(d, xVariable = "Time")
a <- tcxAnalyser:::melting(d, xVariable = "Time")
View(a)
a <- tcxAnalyser:::melting(d, xVariable = "T")
View(a)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
library(plotrix)
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
d <- gpx
d[d$Time<10 | d$Time>35,] <- NA
View(d)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
a <- melt(d, id.vars = "Time")
a <- reshape2melt(d, id.vars = "Time")
a <- reshape2::melt(d, id.vars = "Time")
View(a)
View(a)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
View(res)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
View(a)
View(a)
ff <- lm("Heart rate" ~ "Time", data = a)
ff <- lm(a[,"Heart rate"] ~ data[,"Time"])
ff <- lm(a[,"Heart rate"] ~ a[,"Time"])
ff$coefficients
ff$coefficients[2]
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
View(res)
(res$meanVar2nd-res$meanVar1st)/res$idealVar
100*(res$meanVar2nd-res$meanVar1st)/res$idealVar
100*(res$meanHR2nd-res$meanHR1st)/res$idealHR
100*(res$slopeHR-res$slopeVar)/mean(c(res$slopeHR,res$slopeVar))
100*(res$slopeHR)/mean(c(res$slopeHR,res$slopeVar))
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
source('~/.active-rstudio-document')
res <- decoupling(gpx, "Pace", 10, 35)
gpx <- evenActivity
doPlots(gpx)
gpx <- evenActivity
decoplingRes <- decoupling(data = gpx, variable = "Pace", from = 10, to = 60)
decoplingRes$compareHR
decoplingRes$compareVar
decoplingRes$compareSlopes
a <- res$compareHR
View(a)
row.names(a) <- ""
a
source('~/.active-rstudio-document')
gpx <- evenActivity
decoplingRes <- decoupling(data = gpx, variable = "Pace", from = 10, to = 60)
decoplingRes$compareHR
decoplingRes$compareVar
decoplingRes$compareSlopes
library(tcxAnalyser)
res <- decoupling(evenActivity,"Pace",10,60)
roxygen2::roxygenise()
library(tcxAnalyser)
roxygen2::roxygenise()
res <- decoupling(evenActivity,"Pace",10,60)
library(tcxAnalyser)
res <- decoupling(evenActivity,"Pace",10,60)
library(tcxAnalyser)
res <- decoupling(evenActivity,"Pace",10,60)
res <- decoupling(evenActivity,"Pace",20,60)
res(
)
res <- c(res,a = 5)
library(tcxAnalyser)
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
res <- decoupling(gpx, "Pace", 10, 60)
doPlots(gpx)
doPlots(gpx, 10, 35)
res <- decoupling(gpx, "Pace", 10, 35)
roxygen2::roxygenise()
library(tcxAnalyser)
plotDecoupling(data = gpx, variable = "Pace", from = 10, to = 60)
doPlots(gpx)
plotDecoupling(data = gpx, variable = "Pace", from = 10, to = 35)
plotDecoupling(data = gpx, variable = "Pace", from = 0, to = 35)
roxygen2::roxygenise()
library(tcxAnalyser)
plotDecoupling(data = gpx, variable = "Pace", from = 0, to = 35)
res <- decoupling(gpx, "Pace", 0,35)
library(tcxAnalyser)
roxygen2::roxygenise()
library(tcxAnalyser)
res <- decoupling(gpx, "Pace", 0,35)
res <- decoupling(gpx, "Pace", 0,35)
res <- decoupling(gpx, "Pace", 0,35)
library(tcxAnalyser)
res <- decoupling(gpx, "Pace", 0,35)
p <- doPlots(gpx)
a <- res
a <- c(a,p)
a <- res
a <- c(a,p = p)
a <- res
a$p <- p
library(tcxAnalyser)
library(tcxAnalyser)
p
p+geom_hline(yintercept = 4)
p+geom_hline(yintercept = c(30,4,100,2,7))
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
evenActivity <- dataLoader(file.choose())
View(evenActivity)
devtools::use_data(evenActivity, overwrite = TRUE)
library(tcxAnalyser)
gpx <- evenActivity
evActivity <- dataLoader(file.choose())
intervalActivity <- dataLoader(file.choose())
devtools::use_data(intervalActivity, overwrite = TRUE)
roxygen2::roxygenise()
sp <- autoSplits(intervalActivity)
library(tcxAnalyser)
gpx <- evenActivity
decouplingRes <- decoupling(gpx, variable = "GAP", from = 10, to = 60)
decouplingRes$compareHR
decouplingRes$compareVar
decouplingRes$compareSlopes
library(tcxAnalyser)
gpx <- evenActivity
decouplingRes <- decoupling(gpx, variable = "GAP", from = 10, to = 60)
decouplingRes$compareHR
decouplingRes$compareVar
decouplingRes$compareSlopes
0.15*100/60
0.15*60/100
0.15*60
0.12*60
gpx <- intervalActivity
proposedSplits<-c(7,15.5,17,25.5,27,35.5,37,45.5,47,56)
addSeparator(gpx, proposedSplits)
gpx <- intervalActivity
proposedSplits<-c(9, 13, 15, 19, 21, 25, 27, 31, 33, 37.5, 39.5)
addSeparator(gpx, proposedSplits)
gpx <- intervalActivity
proposedSplits<-c(9, 13, 15, 19, 21,2, 25, 27, 31, 33, 37.5, 39.5)
addSeparator(gpx, proposedSplits)
gpx <- intervalActivity
proposedSplits<-c(9, 13, 15, 19, 21.2, 25, 27, 31, 33, 37.5, 39.5)
addSeparator(gpx, proposedSplits)
gpx <- intervalActivity
proposedSplits<-c(9, 13, 15, 19, 21.2, 25.1, 27.3, 31, 33, 37.5, 39.5)
addSeparator(gpx, proposedSplits)
gpx <- intervalActivity
proposedSplits<-c(9, 13, 15, 19, 21.2, 25.1, 27.3, 31.4, 33.4, 37.5, 39.5)
addSeparator(gpx, proposedSplits)
roxygen2::roxygenise()
library(tcxAnalyser)
??addSeparator
roxygen2::roxygenise()
library(tcxAnalyser)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
generateMap(gpx)
roxygen2::roxygenise()
library(tcxAnalyser)
library(tcxAnalyser)
library(tcxAnalyser)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(tcxAnalyser)
library(tcxAnalyser)
library(tcxAnalyser)
library(tcxAnalyser)
mean(c(1,2,3))
mean(c(1,NaN,3))
mean(c(1,NaN,3), na.rm = TRUE)
mean(c(1,Inf,3), na.rm = TRUE)
gpx <- gpxAnalyser::dataLoader(file.choose())
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
compareSplits(gpx)
sp <- autoSplits(gpx)
hist(diff(gpx$Time))
unique(diff(gpx$Time))
unique(round(diff(gpx$Time), digits = 3))
which(round(diff(gpx$Time), digits = 3) == unique(round(diff(gpx$Time), digits = 3)[2])
)
which(round(diff(gpx$Time), digits = 3) == unique(round(diff(gpx$Time), digits = 3)[2]))
which(round(diff(gpx$Time), digits = 3) == unique(round(diff(gpx$Time), digits = 3))[2])
View(gpx)
length(unique(gpx$Time))
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
sp <- autoSplits(gpx)
compareSplits(gpx)
compareSplits(sp)
View(gpx)
0.0167/2.55e-3
View(a)
0.0167/(2.55e-3-1.32e-3)
scatter.smooth(x = gpx$Time, y = gpx$Pace)
View(gpx)
length(which(is.nan(gpx$Time)))
length(which(is.nan(gpx$Pace)))
idx <- which(is.nan(gpx$Pace))
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
compareSplits(gpx)
View(gpx)
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
View(gpx)
compareSplits(gpx)
which(is.infinite(gpx$GAP))
idx <- which(diff(data$DistanceMeters) == 0)
idx <- which(diff(gpx$Distance) == 0)
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
View(gpx)
compareSplits(gpx)
which(is.infinite(gpx$Pace))
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
compareSplits(gpx)
sp <- autoSplits(gpx)
compareSplits(sp)
library(tcxAnalyser)
tcx <- dataLoader(file.choose())
generateMap(tcx)
(3600*140)/(100*(180/261)^2)
((3600*140)/(100*(180/261)^2))/3600
100*(3600*2*(180/261)^2)/3600
??tendrill
RShowDoc(*, package= . )
gpx <- dataLoader(file.choose())
library(tcxAnalyser)
gpx <- dataLoader(file.choose())
View(gpx)
tcxAnalyser::generateMap(gpx)
plot(gpx$Time)
plot(gpx$Time, gpx$Pace)
tcxAnalyser::doPlots(gpx)
compareSplits(gpx)
plot(gpx$Time, runmed(gpx$Pace, 3, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 5, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 9, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 29, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 49, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 69, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
k <- 39
a <- runmed(gpx$Pace, k,
endrule = c("median", "keep", "constant")[1],
algorithm = NULL, print.level = 0)
mean(a)
sd(a)
k <- 69
a <- runmed(gpx$Pace, k,
endrule = c("median", "keep", "constant")[1],
algorithm = NULL, print.level = 0)
mean(a)
sd(a)
a <- autoSplits(gpx)
max(a$interval1$Time)
plot(gpx$Time, runmed(gpx$Pace, 0, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 1, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
plot(gpx$Time, runmed(gpx$Pace, 0, endrule = c("median", "keep","constant")[1],algorithm = NULL, print.level = 0))
class(gpx)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(tcxAnalyser)
gpxOriginal <- evenActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
library(tcxAnalyser)
gpxOriginal <- evenActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
library(tcxAnalyser)
gpxOriginal <- evenActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
library(tcxAnalyser)
gpxOriginal <- evenActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
library(tcxAnalyser)
gpxOriginal <- evenActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
points(smoothedData$Time, smoothedData$Pace, col = "red")
legend(c("Original", "Smoothed"))
gpxOriginal <- intervalActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
points(smoothedData$Time, smoothedData$Pace, col = "red")
legend(c("Original", "Smoothed"))
gpxOriginal <- intervalActivity
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
points(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topright", c("Original", "Smoothed"))
remove(a)
remove(gpxOriginal)
remove(smoothedData)
remove(k)
rawData <- gpx
remove(gpx)
save(rawData, file="data/rawData.rda")
roxygen2::roxygenise()
library(tcxAnalyser)
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
points(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"))
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
points(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"), col = c("blue", "red"))
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "white")
lines(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
lines(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"))
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "white")
lines(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
lines(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"), col = "blue", "red")
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "white")
lines(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
lines(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"), col = c("blue", "red"))
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
p <- ggplot(gpxOriginal, aes(x = Time, y = Pace))+
geom_line()+
geom_line(data = smoothedData, aes(aes(x = Time, y = Pace)))
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "white")
lines(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
lines(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"), col = c("blue", "red"))
p
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
p <- ggplot(gpxOriginal, aes(x = Time, y = Pace))+
geom_line()+
geom_line(data = smoothedData, aes(x = Time, y = Pace))
plot(gpxOriginal$Time, gpxOriginal$Pace, col = "white")
lines(gpxOriginal$Time, gpxOriginal$Pace, col = "blue")
lines(smoothedData$Time, smoothedData$Pace, col = "red")
legend("topleft", c("Original", "Smoothed"), col = c("blue", "red"))
p
gpxOriginal <- rawData
smoothedData <- gpxSmooth(gpxOriginal, "Pace", k = 39)
library(tcxAnalyser)
data <- data.frame(AltitudeMeters = seq(0,-100, length.out = 1000 ),
DistanceMeters = seq(0,1000, length.out = 1000),
Pace = 4)
#grade <- 100 * c(0,diff(data$AltitudeMeters)) / data$DistanceMeters
grade <- 100 * c(0,diff(data$AltitudeMeters)) / c(1,diff(data$DistanceMeters))
grade[1] <- 0
perc <- ifelse(grade > 0, 0.035, 0.018)
perc[grade == 0] <- 0
data$GAP <- data$Pace - data$Pace*(perc*grade)
idx <- which(is.nan(data$GAP))
if (length(idx)>0){
data[idx,] <- data[idx-1,]
}
idx <- which(is.infinite(data$GAP))
if (length(idx)>0){
data <- data[-idx,]
}
View(data)
data <- data.frame(AltitudeMeters = seq(0,100, length.out = 1000 ),
DistanceMeters = seq(0,1000, length.out = 1000),
Pace = 4)
#grade <- 100 * c(0,diff(data$AltitudeMeters)) / data$DistanceMeters
grade <- 100 * c(0,diff(data$AltitudeMeters)) / c(1,diff(data$DistanceMeters))
grade[1] <- 0
perc <- ifelse(grade > 0, 0.035, 0.018)
perc[grade == 0] <- 0
data$GAP <- data$Pace - data$Pace*(perc*grade)
idx <- which(is.nan(data$GAP))
if (length(idx)>0){
data[idx,] <- data[idx-1,]
}
idx <- which(is.infinite(data$GAP))
if (length(idx)>0){
data <- data[-idx,]
}
library(tcxAnalyser)
gpx <- evenActivity
sp <- autoSplits(gpx)
generateMap(sp)
library(tcxAnalyser)
gpx <- evenActivity
View(gpx)
max(gpx$Distance)
gpx$Elevation <- seq(0,max(gpx$Distance), length.out = dim(gpx)[1])
gpx$`Elevation gain` <- c(0,diff(gpx$Elevation))
grade <- 100 * c(0,diff(data$AltitudeMeters)) / c(1,diff(data$DistanceMeters))
data <- gpx
data$AltitudeMeters <- gpx$Elevation
data$DistanceMeters <- data$Distance
grade <- 100 * c(0,diff(data$AltitudeMeters)) / c(1,diff(data$DistanceMeters))
grade[1] <- 0
perc <- ifelse(grade > 0, 0.035, 0.018)
perc[grade == 0] <- 0
data$GAP <- data$Pace - data$Pace*(perc*grade)
idx <- which(is.nan(data$GAP))
if (length(idx)>0){
data[idx,] <- data[idx-1,]
}
idx <- which(is.infinite(data$GAP))
if (length(idx)>0){
data <- data[-idx,]
}
plot(data$Time,data$Pace)
plot(data$Time,data$GAP)
View(data)
library(tcxAnalyser)
511-1+980
510-41+510
510+510+511-42
